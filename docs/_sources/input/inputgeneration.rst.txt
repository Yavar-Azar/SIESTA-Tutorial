
Structure of the input file
===============================


Minimum data to generate an input file

#. Run type (Scf, MD, OPT, ....)
#. Atomic structure and bravais lattice
#. Brillouin Zone Sampling
#. Level of theory


.. figure:: ./Figs/SiBZ.png
   :scale: 60 %




**Hands-on 1. preparing first input for Siesta**

If you have crystallographic information file (CIF) from your structure the cell parameters and
atomic coordination can be translated to the standard siesta format using ``cif2ecell``:

.. code-block:: bash

  cif2ecell inputf.cif  -p Siesta

Above command generates a fdf file with same prefix

.. code-block::

  SystemName      Bulk Silicon
  SystemLabel     Si     # all data obtained from this calculation has
                         # systemLabel prefix and this label will be used for next analysis


  NumberOfSpecies	        1
  NumberOfAtoms           2


  %block ChemicalSpeciesLabel
    1  14  Si                      # atom label, atomic number, element symbol
  %endblock ChemicalSpeciesLabel


  LatticeConstant      5.41119733025 Ang    #here we define lattice-type
  %block LatticeVectors     # for fcc structure basis vectors are
  0.00  0.50  0.50
  0.50  0.00  0.50
  0.50  0.50  0.00
  %endblock LatticeVectors


  AtomicCoordinatesFormat          ScaledByLatticeVectors
  %block AtomicCoordinatesAndAtomicSpecies
    0.00  0.00  0.00        1
    0.25  0.25  0.25        1
  %endblock AtomicCoordinatesAndAtomicSpecies

  %block kgrid_Monkhorst_Pack  # Brillouin Zone Sampling (automatic here)
     4  0  0  0.5
     0  4  0  0.5
     0  0  4  0.5
  %endblock kgrid_Monkhorst_Pack


if siesta is now in your PATH you can run this example with

.. code-block::

  siesta < input.fdf | tee output.out

Open your output and check all calculated data carefully
first of all we can see our setting  by searching ``simulation parameters``
in the output. Also detailed information on basis set, Pressure, force
and energy decomposition can be find there. A fast way to extract
total force, energy, electron number is

.. code-block:: 

  egrep " Tot |: E_KS\(| electron" Silic.out
